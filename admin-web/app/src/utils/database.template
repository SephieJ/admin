# -*- coding: utf-8 -*-

from sqlalchemy import create_engine
from sqlalchemy.orm import scoped_session
from sqlalchemy.orm import sessionmaker
from sqlalchemy.ext.declarative import declarative_base

# Configure database URI.
# Format is 'mysql+pymysql://<username>:<password>@<hostname>/<database_name>'
SQLALCHEMY_DATABASE_URI = 'mysql+pymysql://{}:{}@{}:{}/{}?&unix_socket={}?charset=utf8mb4'.format("root", "jeffmiranda26", "localhost", "3306", "r2s_manager", "/opt/lampp/var/mysql/mysql.sock")

engine = create_engine(SQLALCHEMY_DATABASE_URI,
                        convert_unicode=True,
                        poolclass=QueuePool,
                        pool_pre_ping=True,
                        pool_size=10,
                        pool_recycle=14400)
SessionDB = scoped_session(sessionmaker(autocommit=False,
                                        autoflush=False,
                                        bind=engine))
Base = declarative_base()
Base.query = SessionDB.query_property()


def init_db():
    # import all modules here that might define models so that
    # they will be registered properly on the metadata. Otherwise
    # you will have to import them first before calling init_db()
    Base.metadata.create_all(bind=engine)
